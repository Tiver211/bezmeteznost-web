openapi: 3.0.3
info:
  title: Mods Management API
  version: 1.0.0
  description: API для работы с модами (список, загрузка, проверка обновлений)

servers:
  - url: /mods  # Базовый URL (можно заменить на полный, например https://api.example.com/mods)
    description: Основной сервер

paths:
  /:
    get:
      tags:
        - Mods
      summary: Получить список модов
      description: Возвращает список модов, обновленных после указанной даты
      parameters:
        - name: update
          in: query
          required: false
          description: Дата в формате `YYYY.MM.DD`
          schema:
            type: string
            example: "2024.05.01"
        - name: id
          in: query
          required: false
          description: Id мода
          schema:
            type: string
            example: "40c50f38-a5f6-4ab8-9b95-af3354d46887"
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    required:
                      type: boolean
                    last_update:
                      type: string
                      format: date-time
                    hash:
                      type: string
                example:
                  mod1:
                    id: "40c50f38-a5f6-4ab8-9b95-af3354d46887"
                    name: "Example Mod"
                    required: true
                    last_update: "2024-05-10T12:00:00Z"
                    hash: "a1b2c3d4"
        '400':
          description: Неверный формат даты или uuid
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                example:
                  msg: "incorrect data"
        '404':
          description: Мода с таким id не существует
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                example:
                  msg: "uuid not exist"
                    
  /download/{mod_id}:
    get:
      tags:
        - Download
      summary: Скачать мод
      description: Возвращает JAR-файл мода с ETag (хэш)
      parameters:
        - name: mod_id
          in: path
          required: true
          description: ID мода
          schema:
            type: string
      responses:
        '200':
          description: Файл мода
          headers:
            ETag:
              schema:
                type: string
              description: Хэш мода
          content:
            application/java-archive:
              schema:
                type: string
                format: binary
        '404':
          description: Мод не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                example:
                  msg: "not found"
        '400':
          description: uuid не корректный
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                example:
                  msg: "incorrect uuid"

  /updates:
    post:
      tags:
        - Updates
      summary: Проверить обновления модов
      description: Возвращает изменения (новые/обновленные/удаленные моды)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
              example: ["07b99c8a49bbee71", "3017e9e7e1749277"]
      responses:
        '200':
          description: Список изменений
          content:
            application/json:
              schema:
                type: object
                properties:
                  add:
                    type: object
                    additionalProperties:
                      $ref: '#/components/schemas/Mod'
                  update:
                    type: object
                    additionalProperties:
                      $ref: '#/components/schemas/Mod'
                  delete:
                    type: array
                    items:
                      type: string
                example:
                  add:
                    "07b99c8a49bbee71":
                      id: "2dfd2270-6df3-4360-a403-6a96aeee51d9"
                      name: "New Mod"
                      required: false
                      last_update: "2024-05-15T10:00:00Z"
                      hash: "new_hash123"
                  update:
                    "3017e9e7e1749277":
                      id: "480232f5-f74c-49ac-8f9c-35b6110531ac"
                      name: "Updated Mod"
                      required: true
                      last_update: "2024-05-12T14:30:00Z"
                      hash: "updated_hash456"
                  delete: ["bb8d5a0073f05f2a"]

components:
  schemas:
    Mod:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        required:
          type: boolean
        last_update:
          type: string
          format: date-time
        hash:
          type: string
